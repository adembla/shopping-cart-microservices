#notice the use of profiles one for localhost, one for docker
spring:
  profiles:
    active: "dev"
  main:
    banner-mode: "off"  
  freemarker:
    enabled: false           # Ignore Eureka dashboard FreeMarker templates
 
 
security:
  oauth2:
    client:
      access-token-validity-seconds: 120
server:
  port: ${zuul.port:8000} 
---
spring:
  profiles: dev
  datasource:
    url: jdbc:h2:mem:login_ms
    username: sa
    password: 
    data: classpath:/sql/data.sql
    platform: org.hibernate.dialect.H2Dialect
  jpa:
    hibernate:
      ddl-auto: create-drop
      
#spring:
  #profiles: dev
  #datasource:
    #url: jdbc:mysql://127.0.0.1:3306/login_ms
    #username: root
    #password: password
    #data: classpath:/sql/data.sql
  #jpa:
    #hibernate:
      #ddl-auto: create-drop
zuul:
  sensitive-headers: Cookie,Set-Cookie 
  host:
    connect-timeout-millis: 160000000
    socket-timeout-millis: 160000000
    
    
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 160000000
        timeout:
        enabled: false
---
spring:
  profiles: docker
  datasource:   #docker instance of mysql
    url: jdbc:mysql://localhost:32768/login_ms  
    username: root
    password: password
  jpa:
    hibernate:
      ddl-auto: create-drop 
      naming:
       strategy: org.hibernate.cfg.ImprovedNamingStrategy
    database-platform: org.hibernate.dialect.MySQL5Dialect
documentation: 
  swagger: 
    services:   
      - 
        name: inventory-service
        url: ${documentation.baseurl}:${zuul.port}/inventory-service/v2/api-docs
        version: 2.0
      - 
        name: customer-service
        url: ${documentation.baseurl}:${zuul.port}/customer-service/v2/api-docs
        version: 2.0
      - 
        name: invoice-service
        url: ${documentation.baseurl}:${zuul.port}/invoice-service/v2/api-docs
        version: 2.0      

---

spring:
  profiles: dev  
     
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:${discovery.port:1111}/eureka/ # using eureka instead of localhost
  instance:
    leaseRenewalIntervalInSeconds: 5   # DO NOT DO THIS IN PRODUCTION
    preferIpAddress: true

---

spring:
  profiles: docker 
  
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:${discovery.port}/eureka/ # using eureka instead of localhost
  instance:
    leaseRenewalIntervalInSeconds: 5   # DO NOT DO THIS IN PRODUCTION
    preferIpAddress: true
documentation: 
  baseurl: http://localhost
    
